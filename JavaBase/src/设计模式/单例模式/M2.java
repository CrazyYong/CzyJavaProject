package 设计模式.单例模式;

/**
 * Created by czy on 2018/7/31.
 * 方式2 （懒汉式）
 * 优点：get() 方法被调用的时候，才创建实例，节省资源。
 * 缺点：线程不安全。
 *
 * 这种模式，可以做到单例模式，但是只是在单线程中是单例的，如果在多线程中操作，可能出现多个实例。
 *
 * 测试：启动20个线程，然后在线程中打印 M2 实例的内存地址
 *
 * 造成原因：线程A希望使用M2，调用get()方法。因为是第一次调用，A就发现 m2 是null的，于是它开始创建实例，就在这个时候，
 * CPU发生时间片切换，线程B开始执行，它要使用 Person ，调用get()方法，同样检测到 person 是null——注意，这是在A检测完之后切换的，
 * 也就是说A并没有来得及创建对象——因此B开始创建。B创建完成后，切换到A继续执行，因为它已经检测完了，所以A不会再检测一遍，
 * 它会直接创建对象。这样，线程A和B各自拥有一个 M2 的对象——单例失败！
 *
 * 总结：1、可以实现单线程单例  2、多线单例无法保证
 * 改进：1、加锁
 */
public class M2 {
    private static M2 m2;

    private M2(){

    }

    public static M2 get(){
        if(m2==null){
            m2=new M2();
        }

        return m2;
    }
}
